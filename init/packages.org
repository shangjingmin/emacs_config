* packages
** my load packages
#+begin_src emacs-lisp
(defvar required-packages
  '(
;    sqlplus
    org
		yasnippet
		;textmate
		;highlight-parentheses
		cedet
		;ecb
		markdown-mode
		w3m
		emms
		ox-reveal
		;jdee
		dash
		popup
		eclim
		android-mode
		ruby-mode
		rvm
		robe
		rinari
		rhtml-mode
		yaml-mode
		projectile-rails
		sdcv
		showtip
		;weibo.emacs
		magit
		calfw
  ) "a list of packages to ensure are installed at launch.")
#+end_src
** install packages
#+begin_src emacs-lisp
; method to check if all packages are installed
(defun packages-installed-p ()
  (loop for p in required-packages
        when (not (package-installed-p p)) do (return nil)
        finally (return t)))

; if not all packages are installed, check one by one and install the missing ones.
(unless (packages-installed-p)
  ; check for new packages (package versions)
  (message "%s" "Emacs is now refreshing its package database...")
  (package-refresh-contents)
  (message "%s" " done.")
  ; install the missing packages
  (dolist (p required-packages)
    (when (not (package-installed-p p))
      (package-install p))))
#+end_src
** my load packages init
#+begin_src emacs-lisp
; Set up for Oracle
(let ((oracle-home "/home/s/programs/oracle/instantclient_11_2"))
;((oracle-home (shell-command-to-string ". ~/.bashrc; echo -n $ORACLE_HOME")))
  (if oracle-home
      (setenv "ORACLE_HOME" oracle-home))
  (setenv "PATH" (concat (getenv "PATH")
                         (format "%s%s" oracle-home "")))
  (add-to-list 'exec-path (format "%s%s" oracle-home ""))
  (setenv "LD_LIBRARY_PATH" oracle-home)
)
#+end_src
